mutate(mins = parse_number(duration))
plot_ly(
x = ~ duration_min,
type = "histogram",
nbinsx = 40,
marker = list(
color = "red",
line = list(color = "black",
width = 1))
) %>%
layout(
title = "Duration distrbution",
yaxis = list(title = "Count",
zeroline = FALSE),
xaxis = list(title = "Duration (min)",
zeroline = FALSE))
movies <- my.data %>% select(type, duration) %>%
filter(type == "Movie") %>%
drop_na() %>%
mutate(mins = parse_number(duration))
movies %>%
plot_ly(
x = ~ mins,
type = "histogram",
nbinsx = 40,
marker = list(
color = "red",
line = list(color = "black",
width = 1))
) %>%
layout(
title = "Movie Durations",
yaxis = list(title = "Count",
zeroline = FALSE),
xaxis = list(title = "Duration (min)",
zeroline = FALSE))
movies <- my.data %>% select(type, duration) %>%
filter(type == "Movie") %>%
drop_na() %>%
mutate(mins = parse_number(duration))
movies %>%
plot_ly(
x = ~ mins,
type = "histogram",
nbinsx = 40,
marker = list(
color = "red",
line = list(color = "black",
width = 1))
) %>%
layout(
title = "Movie Durations",
yaxis = list(title = "Number of Movies",
zeroline = FALSE),
xaxis = list(title = "Number of Minutes",
zeroline = FALSE))
data <- my.data %>%
group_by(type) %>%
summarize(counts = n(),
percentage = n()/nrow(my.data))
ggplot(data, aes(x = "", y=percentage, fill = type)) +
geom_bar(width = 1, stat = "identity") +coord_polar(theta = "y", start=0)+
scale_fill_brewer(palette="red")+
labs(fill="Type",
x=NULL,
y=NULL,
title="# of Movies vs TV Shows on Netflix ") +
geom_text(aes(label = paste0(round(percentage*100),'%')),size=8, position = position_stack(vjust = 0.5))+
theme_void()+theme(plot.title = element_text(hjust=0.5,size=22))
data <- my.data %>%
group_by(type) %>%
summarize(counts = n(),
percentage = n()/nrow(my.data))
ggplot(data, aes(x = "", y=percentage, fill = type)) +
geom_bar(width = 1, stat = "identity") +coord_polar(theta = "y", start=0)+
scale_fill_brewer(palette="Blues")+
labs(fill="Type",
x=NULL,
y=NULL,
title="# of Movies vs TV Shows on Netflix ") +
geom_text(aes(label = paste0(round(percentage*100),'%')),size=8, position = position_stack(vjust = 0.5))+
theme_void()+theme(plot.title = element_text(hjust=0.5,size=22))
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(Count = n()) %>%
arrange(Count) %>%
plot_ly(
x = ~ type ,
y = ~ Count,
type = "bar",
color = ~ rating,
text = ~ Count,
textposition = 'outside',
textfont = list(color = '#000000', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ Count)) %>%
layout(
title = "Rating by Type",
yaxis = list(title = "Type"),
xaxis = list(title = "Count"),
legend = list(title = list(text = '<b> Rating </b>'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(Count = n()) %>%
arrange(Count) %>%
plot_ly(
x = ~ type ,
y = ~ Count,
type = "bar",
color = ~ rating,
text = ~ Count,
textposition = 'outside',
textfont = list(color = '#000000', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ Count)) %>%
layout(
title = "Rating by Type",
yaxis = list(title = "Type"),
xaxis = list(title = "Count"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(Count = n()) %>%
arrange(Count) %>%
plot_ly(
x = ~ type ,
y = ~ Count,
type = "bar",
color = ~ rating,
text = ~ Count,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ Count)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 0)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 10)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 100)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 7)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 3)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 7)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)
) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating'))
)
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(
x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating')))
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating')))
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating')))
library(plotly)
library(tidyverse)
library(ggplot2)
my.data <- read.csv('./netflix_titles.csv')
my.data
data <- my.data %>%
group_by(type) %>%
summarize(counts = n(),
percentage = n()/nrow(my.data))
ggplot(data, aes(x = "", y=percentage, fill = type)) +
geom_bar(width = 1, stat = "identity") +coord_polar(theta = "y", start=0)+
scale_fill_brewer(palette="Blues")+
labs(fill="Type",
x=NULL,
y=NULL,
title="# of Movies vs TV Shows on Netflix ") +
geom_text(aes(label = paste0(round(percentage*100),'%')),size=8, position = position_stack(vjust = 0.5))+
theme_void()+theme(plot.title = element_text(hjust=0.5,size=22))
movies <- my.data %>% select(type, duration) %>%
filter(type == "Movie") %>%
drop_na() %>%
mutate(mins = parse_number(duration))
movies %>%
plot_ly(
x = ~ mins,
type = "histogram",
nbinsx = 40,
marker = list(
color = "red",
line = list(color = "black",
width = 1))
) %>%
layout(
title = "Movie Durations",
yaxis = list(title = "Number of Movies",
zeroline = FALSE),
xaxis = list(title = "Number of Minutes",
zeroline = FALSE))
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating')))
library(plotly)
library(tidyverse)
library(ggplot2)
my.data <- read.csv('./netflix_titles.csv')
my.data
data <- my.data %>%
group_by(type) %>%
summarize(counts = n(),
percentage = n()/nrow(my.data))
ggplot(data, aes(x = "", y=percentage, fill = type)) +
geom_bar(width = 1, stat = "identity") +coord_polar(theta = "y", start=0)+
scale_fill_brewer(palette="Blues")+
labs(fill="Type",
x=NULL,
y=NULL,
title="# of Movies vs TV Shows on Netflix ") +
geom_text(aes(label = paste0(round(percentage*100),'%')),size=8, position = position_stack(vjust = 0.5))+
theme_void()+theme(plot.title = element_text(hjust=0.5,size=22))
movies <- my.data %>% select(type, duration) %>%
filter(type == "Movie") %>%
drop_na() %>%
mutate(mins = parse_number(duration))
movies %>%
plot_ly(
x = ~ mins,
type = "histogram",
nbinsx = 40,
marker = list(
color = "red",
line = list(color = "black",
width = 1))
) %>%
layout(
title = "Movie Durations",
yaxis = list(title = "Number of Movies",
zeroline = FALSE),
xaxis = list(title = "Number of Minutes",
zeroline = FALSE))
my.data %>% select(rating, type) %>%
filter(!is.na(rating)) %>%
mutate(rating = fct_lump(rating, 5)) %>%
group_by(rating, type) %>%
summarise(freq = n()) %>%
arrange(freq) %>%
plot_ly(x = ~ type ,
y = ~ freq,
type = "bar",
color = ~ rating,
text = ~ freq,
textposition = 'outside',
textfont = list(color = 'black', size = 12)) %>%
layout(yaxis = list(categoryorder = "array",
categoryarray = ~ freq)) %>%
layout(
title = "# of Movies % TV Shows According to their Ratings",
yaxis = list(title = "Type and Their Ratings"),
xaxis = list(title = "Frequency"),
legend = list(title = list(text = 'Rating')))
